<?xml version="1.0" encoding="UTF-8"?>
<!-- XML 문서의 유효성 체크를 위해 필요한 부분 -->
<!DOCTYPE configuration PUBLIC 
"-//mybatis.org//DTD Config 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-config.dtd" >
<configuration>
	<!-- 2_2. 2) driver.properties 적용 -->
	<properties resource="/driver.properties"/>

	<!-- 1. 마이바티스 설정과 관련 된 기본 세팅을 선언하는 부분 -->
	<settings>
		<setting name="jdbcTypeForNull" value="NULL"/>
		<!-- 만약에 null로 데이터가 전달 되었다면 빈칸이 아닌 null로 인식하라는 뜻
			value의 NULL은 반드시 대문자로 작성. 소문자인 경우 에러 발생. -->
	</settings>
	
	<!-- 4. vo 객체들의 풀 네임을 매번 사용하기 번거롭기 때문에 별칭을 등록 -->
	<typeAliases>
		<typeAlias type="com.kh.member.model.vo.Member" alias="Member"/>
		<typeAlias type="com.kh.member.board.vo.Board" alias="Board"/>
		<typeAlias type="com.kh.member.board.vo.Reply" alias="Reply"/>
	</typeAliases>

	<!-- 2. DB 연결할 설정에 대한 정보를 선언하는 부분
	default: 연결 설정을 여러개 생성하여 아이디로 구분하고 기본으로 연결할
			설정 정보를 설정하는 속성 -->
  <environments default="development">
  	<!-- DataBase 연결할 설정 정보들을 선언 -->
    <environment id="development">
    	<!-- transactionManager는 JDBC와 MANAGED 두 가지 타입을 제공
    		- JDBC : JDBC가 commit과 rollback의 기능을 직접 사용 가능하게
    				하는 옵션 (수동 commit)
    		- MANAGED : 트랜잭션에 대해 어떤 영향도 행사하지 않는다는 옵션
    				(자동 commit) 컨테이너가 트랜잭션의 모든 생명 주기를 관리 -->
      <transactionManager type="JDBC"/>
      <!-- 실제 DB 접속에 관한 정보들을 넣는 태그이며 type 속성은
      		ConnectionPool을 사용할 것인지에 대한 여부(POOLED/UNPOOLED) -->
      <dataSource type="POOLED">
      	<!-- 2_1. driver, url, username, password 정보를
      		value에 직접 작성 -->
        <!-- <property name="driver" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
        <property name="username" value="mybatis"/>
        <property name="password" value="mybatis"/> -->
        <!-- 2_2. driver.properties 파일을 만들어서 연결해주는 방식 
        1) resources 폴더에 driver.properties 파일을 만들어주자
        2) 위쪽으로 올라가서 configuration 안에 properties 속성을
                     지정하여 방금 만든 driver.properties와 연결 시키기 
        3) 아래의 구문 완성-->
        <property name="driver" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
      </dataSource>
    </environment>
  </environments>
  <!-- 여기까지 작업을 마치고 index.jsp로 돌아가자 -->
  
  <!-- 3. DB에 사용 되는 쿼리문들을 담은 mapper 파일들을 등록  -->
  <mappers>
  	<mapper resource="/mappers/member-mapper.xml"/>
  	<mapper resource="/mappers/board-mapper.xml"/>
  </mappers>
</configuration>
